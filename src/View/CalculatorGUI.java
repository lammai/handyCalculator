/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.BinaryCalculator;
import Controller.DecimalCalculator;
import Model.Binary;
import Model.Decimal;

import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.JFrame;
import javax.swing.JPanel;

import static View.BinHexCLI.performCalculation;
import static View.BinHexCLI.splitCalculation;

/**
 *
 * @author Kusanagi
 */
public class CalculatorGUI extends javax.swing.JFrame {

    /**
     * Creates new form CalculatorGUI
     */
    CardLayout cardLayout;

    public CalculatorGUI() {
        initComponents();
        jScrollPane1.setBorder(null);
        cardLayout = (CardLayout)(calcMainPane.getLayout());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        rootPane = new javax.swing.JPanel();
        selectionPane = new javax.swing.JPanel();
        binaryTab = new javax.swing.JPanel();
        binaryLabel = new javax.swing.JLabel();
        hexTab = new javax.swing.JPanel();
        hexLabel = new javax.swing.JLabel();
        bandwidthTab = new javax.swing.JPanel();
        bandwidthLabel = new javax.swing.JLabel();
        fileIOTab = new javax.swing.JPanel();
        bandwidthLabel1 = new javax.swing.JLabel();
        topLogo = new javax.swing.JLabel();
        closeButton = new javax.swing.JLabel();
        minimizeButton = new javax.swing.JLabel();
        calcMainPane = new javax.swing.JPanel();
        welcomePane = new javax.swing.JPanel();
        welcomeText = new javax.swing.JLabel();
        underLine = new javax.swing.JLabel();
        logo = new javax.swing.JLabel();
        designedBy = new javax.swing.JLabel();
        binaryPane = new javax.swing.JPanel();
        binCalcPane = new javax.swing.JPanel();
        calcEntryText = new javax.swing.JLabel();
        calculationEntry = new javax.swing.JTextField();
        equalButton = new javax.swing.JLabel();
        clearButton = new javax.swing.JLabel();
        binaryCalculationHeader = new javax.swing.JLabel();
        calcInvalidText = new javax.swing.JLabel();
        binToDecPane = new javax.swing.JPanel();
        bin2DecHeader = new javax.swing.JLabel();
        binValueText = new javax.swing.JLabel();
        binValueEntry = new javax.swing.JTextField();
        equalBin2Dec = new javax.swing.JLabel();
        clearBin2Dec = new javax.swing.JLabel();
        decToBinPane = new javax.swing.JPanel();
        dec2BinHeader = new javax.swing.JLabel();
        decValueText = new javax.swing.JLabel();
        decValueEntry = new javax.swing.JTextField();
        equalDec2Bin = new javax.swing.JLabel();
        clearDec2Bin = new javax.swing.JLabel();
        decimalBinInvalidText = new javax.swing.JLabel();
        resultPane = new javax.swing.JPanel();
        dec2BinHeader1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        binResultArea = new javax.swing.JTextArea();
        hexPane = new javax.swing.JPanel();
        hexText = new javax.swing.JLabel();
        bandwidthPane = new javax.swing.JPanel();
        bandwidthText = new javax.swing.JLabel();
        filePane = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);
        setUndecorated(true);

        rootPane.setBackground(new java.awt.Color(51, 51, 51));
        rootPane.setPreferredSize(new java.awt.Dimension(900, 600));
        rootPane.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                rootPaneMouseDragged(evt);
            }
        });
        rootPane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                rootPaneMousePressed(evt);
            }
        });

        selectionPane.setBackground(new java.awt.Color(26, 26, 26));
        selectionPane.setPreferredSize(new java.awt.Dimension(318, 500));

        binaryTab.setBackground(new java.awt.Color(15, 15, 15));
        binaryTab.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        binaryTab.setPreferredSize(new java.awt.Dimension(144, 54));
        binaryTab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                binaryTabMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                binaryTabMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                binaryTabMousePressed(evt);
            }
        });

        binaryLabel.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        binaryLabel.setForeground(new java.awt.Color(255, 255, 255));
        binaryLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_binary_file_25px.png"))); // NOI18N
        binaryLabel.setText("Binary");
        binaryTab.add(binaryLabel);

        hexTab.setBackground(new java.awt.Color(15, 15, 15));
        hexTab.setPreferredSize(new java.awt.Dimension(318, 54));
        hexTab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                hexTabMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                hexTabMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                hexTabMousePressed(evt);
            }
        });

        hexLabel.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        hexLabel.setForeground(new java.awt.Color(255, 255, 255));
        hexLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_hexadecimal_25px.png"))); // NOI18N
        hexLabel.setText("Hexadecimal");
        hexTab.add(hexLabel);

        bandwidthTab.setBackground(new java.awt.Color(15, 15, 15));
        bandwidthTab.setPreferredSize(new java.awt.Dimension(196, 54));
        bandwidthTab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bandwidthTabMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bandwidthTabMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                bandwidthTabMousePressed(evt);
            }
        });

        bandwidthLabel.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        bandwidthLabel.setForeground(new java.awt.Color(255, 255, 255));
        bandwidthLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_outgoing_data_25px.png"))); // NOI18N
        bandwidthLabel.setText("Bandwidth");
        bandwidthTab.add(bandwidthLabel);

        fileIOTab.setBackground(new java.awt.Color(15, 15, 15));
        fileIOTab.setPreferredSize(new java.awt.Dimension(196, 54));
        fileIOTab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                fileIOTabMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                fileIOTabMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                fileIOTabMousePressed(evt);
            }
        });

        bandwidthLabel1.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        bandwidthLabel1.setForeground(new java.awt.Color(255, 255, 255));
        bandwidthLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_txt_25px.png"))); // NOI18N
        bandwidthLabel1.setText("File I/O");
        fileIOTab.add(bandwidthLabel1);

        topLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/calcLogo.png"))); // NOI18N

        javax.swing.GroupLayout selectionPaneLayout = new javax.swing.GroupLayout(selectionPane);
        selectionPane.setLayout(selectionPaneLayout);
        selectionPaneLayout.setHorizontalGroup(
                selectionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(binaryTab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(hexTab, javax.swing.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
                        .addComponent(bandwidthTab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(fileIOTab, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(selectionPaneLayout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(topLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        );
        selectionPaneLayout.setVerticalGroup(
                selectionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(selectionPaneLayout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addComponent(topLogo)
                                .addGap(0, 0, 0)
                                .addComponent(binaryTab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(hexTab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(bandwidthTab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(fileIOTab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        closeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_close_window_25px.png"))); // NOI18N
        closeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                closeButtonMousePressed(evt);
            }
        });

        minimizeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_minimize_window_25px.png"))); // NOI18N
        minimizeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                minimizeButtonMousePressed(evt);
            }
        });

        calcMainPane.setLayout(new java.awt.CardLayout());

        welcomePane.setBackground(new java.awt.Color(51, 51, 51));

        welcomeText.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        welcomeText.setForeground(new java.awt.Color(255, 255, 255));
        welcomeText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        welcomeText.setText("Welcome to the Calculator");

        underLine.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        underLine.setForeground(new java.awt.Color(255, 255, 255));
        underLine.setText("___________________________________");

        logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo90px.png"))); // NOI18N

        designedBy.setForeground(new java.awt.Color(255, 255, 255));
        designedBy.setText("Designed by Lam Mai | TCSS 305");

        javax.swing.GroupLayout welcomePaneLayout = new javax.swing.GroupLayout(welcomePane);
        welcomePane.setLayout(welcomePaneLayout);
        welcomePaneLayout.setHorizontalGroup(
                welcomePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(welcomePaneLayout.createSequentialGroup()
                                .addContainerGap(179, Short.MAX_VALUE)
                                .addGroup(welcomePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, welcomePaneLayout.createSequentialGroup()
                                                .addGroup(welcomePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(welcomeText)
                                                        .addGroup(welcomePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addComponent(underLine, javax.swing.GroupLayout.Alignment.TRAILING)
                                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, welcomePaneLayout.createSequentialGroup()
                                                                        .addComponent(logo)
                                                                        .addGap(79, 79, 79))))
                                                .addGap(161, 161, 161))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, welcomePaneLayout.createSequentialGroup()
                                                .addComponent(designedBy)
                                                .addGap(194, 194, 194))))
        );
        welcomePaneLayout.setVerticalGroup(
                welcomePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(welcomePaneLayout.createSequentialGroup()
                                .addGap(210, 210, 210)
                                .addComponent(logo)
                                .addGap(0, 0, 0)
                                .addComponent(underLine)
                                .addGap(0, 0, 0)
                                .addComponent(designedBy)
                                .addGap(6, 6, 6)
                                .addComponent(welcomeText)
                                .addContainerGap(243, Short.MAX_VALUE))
        );

        calcMainPane.add(welcomePane, "card6");

        binaryPane.setBackground(new java.awt.Color(51, 51, 51));
        binaryPane.setLayout(new java.awt.GridLayout(4, 1));

        binCalcPane.setBackground(new java.awt.Color(51, 51, 51));

        calcEntryText.setForeground(new java.awt.Color(255, 255, 255));
        calcEntryText.setText("Input Binary Calculation:");

        calculationEntry.setText("1010 + 1010");
        calculationEntry.setPreferredSize(new java.awt.Dimension(300, 30));
        calculationEntry.setSelectionColor(new java.awt.Color(204, 204, 204));
        calculationEntry.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                calculationEntryFocusGained(evt);
            }
        });
        calculationEntry.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                calculationEntryKeyTyped(evt);
            }
        });

        equalButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_equals_36px.png"))); // NOI18N
        equalButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                equalButtonMouseClicked(evt);
            }
        });

        clearButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_clear_symbol_36px.png"))); // NOI18N
        clearButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clearButtonMouseClicked(evt);
            }
        });

        binaryCalculationHeader.setFont(new java.awt.Font("Corbel Light", 0, 24)); // NOI18N
        binaryCalculationHeader.setForeground(new java.awt.Color(255, 255, 255));
        binaryCalculationHeader.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        binaryCalculationHeader.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Club 6Asset 11.png"))); // NOI18N
        binaryCalculationHeader.setText("Binary Calculation");
        binaryCalculationHeader.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        calcInvalidText.setForeground(new java.awt.Color(255, 51, 51));
        calcInvalidText.setText("Invalid input!");
        calcInvalidText.setVisible(false);

        javax.swing.GroupLayout binCalcPaneLayout = new javax.swing.GroupLayout(binCalcPane);
        binCalcPane.setLayout(binCalcPaneLayout);
        binCalcPaneLayout.setHorizontalGroup(
                binCalcPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(binCalcPaneLayout.createSequentialGroup()
                                .addGroup(binCalcPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(binCalcPaneLayout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(binaryCalculationHeader))
                                        .addGroup(binCalcPaneLayout.createSequentialGroup()
                                                .addGap(45, 45, 45)
                                                .addComponent(calcEntryText)
                                                .addGap(5, 5, 5)
                                                .addGroup(binCalcPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                        .addGroup(binCalcPaneLayout.createSequentialGroup()
                                                                .addGap(0, 0, 0)
                                                                .addComponent(calcInvalidText)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(equalButton)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(clearButton))
                                                        .addComponent(calculationEntry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addContainerGap(70, Short.MAX_VALUE))
        );
        binCalcPaneLayout.setVerticalGroup(
                binCalcPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, binCalcPaneLayout.createSequentialGroup()
                                .addContainerGap(19, Short.MAX_VALUE)
                                .addComponent(binaryCalculationHeader)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(binCalcPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(binCalcPaneLayout.createSequentialGroup()
                                                .addGap(8, 8, 8)
                                                .addComponent(calcEntryText))
                                        .addComponent(calculationEntry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(binCalcPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(equalButton)
                                        .addComponent(clearButton)
                                        .addComponent(calcInvalidText))
                                .addContainerGap())
        );

        binaryPane.add(binCalcPane);

        binToDecPane.setBackground(new java.awt.Color(51, 51, 51));

        bin2DecHeader.setFont(new java.awt.Font("Corbel Light", 0, 24)); // NOI18N
        bin2DecHeader.setForeground(new java.awt.Color(255, 255, 255));
        bin2DecHeader.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        bin2DecHeader.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Club 6Asset 11.png"))); // NOI18N
        bin2DecHeader.setText("Binary to Decimal");
        bin2DecHeader.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        binValueText.setForeground(new java.awt.Color(255, 255, 255));
        binValueText.setText("Binary value:");

        binValueEntry.setText("1000001");
        binValueEntry.setPreferredSize(new java.awt.Dimension(300, 30));
        binValueEntry.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                binValueEntryFocusGained(evt);
            }
        });
        binValueEntry.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                binValueEntryKeyTyped(evt);
            }
        });

        equalBin2Dec.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_equals_36px.png"))); // NOI18N
        equalBin2Dec.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                equalBin2DecMouseClicked(evt);
            }
        });

        clearBin2Dec.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_clear_symbol_36px.png"))); // NOI18N
        clearBin2Dec.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clearBin2DecMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout binToDecPaneLayout = new javax.swing.GroupLayout(binToDecPane);
        binToDecPane.setLayout(binToDecPaneLayout);
        binToDecPaneLayout.setHorizontalGroup(
                binToDecPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(binToDecPaneLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(bin2DecHeader)
                                .addContainerGap(72, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, binToDecPaneLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(binToDecPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(binToDecPaneLayout.createSequentialGroup()
                                                .addComponent(equalBin2Dec)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(clearBin2Dec))
                                        .addGroup(binToDecPaneLayout.createSequentialGroup()
                                                .addComponent(binValueText)
                                                .addGap(5, 5, 5)
                                                .addComponent(binValueEntry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(101, 101, 101))
        );
        binToDecPaneLayout.setVerticalGroup(
                binToDecPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, binToDecPaneLayout.createSequentialGroup()
                                .addContainerGap(19, Short.MAX_VALUE)
                                .addComponent(bin2DecHeader)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(binToDecPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(binToDecPaneLayout.createSequentialGroup()
                                                .addGap(8, 8, 8)
                                                .addComponent(binValueText))
                                        .addComponent(binValueEntry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(binToDecPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(equalBin2Dec)
                                        .addComponent(clearBin2Dec))
                                .addGap(16, 16, 16))
        );

        binaryPane.add(binToDecPane);

        decToBinPane.setBackground(new java.awt.Color(51, 51, 51));

        dec2BinHeader.setFont(new java.awt.Font("Corbel Light", 0, 24)); // NOI18N
        dec2BinHeader.setForeground(new java.awt.Color(255, 255, 255));
        dec2BinHeader.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        dec2BinHeader.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Club 6Asset 11.png"))); // NOI18N
        dec2BinHeader.setText("Decimal to Binary");
        dec2BinHeader.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        decValueText.setForeground(new java.awt.Color(255, 255, 255));
        decValueText.setText("Decimal value:");

        decValueEntry.setText("12345");
        decValueEntry.setPreferredSize(new java.awt.Dimension(300, 30));
        decValueEntry.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                decValueEntryFocusGained(evt);
            }
        });
        decValueEntry.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                decValueEntryKeyTyped(evt);
            }
        });

        equalDec2Bin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_equals_36px.png"))); // NOI18N
        equalDec2Bin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                equalDec2BinMouseClicked(evt);
            }
        });

        clearDec2Bin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_clear_symbol_36px.png"))); // NOI18N
        clearDec2Bin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clearDec2BinMouseClicked(evt);
            }
        });

        decimalBinInvalidText.setForeground(new java.awt.Color(255, 51, 51));
        decimalBinInvalidText.setText("Invalid input!");
        decimalBinInvalidText.setVisible(false);

        javax.swing.GroupLayout decToBinPaneLayout = new javax.swing.GroupLayout(decToBinPane);
        decToBinPane.setLayout(decToBinPaneLayout);
        decToBinPaneLayout.setHorizontalGroup(
                decToBinPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(decToBinPaneLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(dec2BinHeader)
                                .addContainerGap(72, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, decToBinPaneLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(decValueText)
                                .addGap(5, 5, 5)
                                .addGroup(decToBinPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(decToBinPaneLayout.createSequentialGroup()
                                                .addComponent(decimalBinInvalidText)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(equalDec2Bin)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(clearDec2Bin))
                                        .addComponent(decValueEntry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(101, 101, 101))
        );
        decToBinPaneLayout.setVerticalGroup(
                decToBinPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, decToBinPaneLayout.createSequentialGroup()
                                .addContainerGap(19, Short.MAX_VALUE)
                                .addComponent(dec2BinHeader)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(decToBinPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(decToBinPaneLayout.createSequentialGroup()
                                                .addGap(8, 8, 8)
                                                .addComponent(decValueText))
                                        .addComponent(decValueEntry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(decToBinPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(decToBinPaneLayout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(decToBinPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(equalDec2Bin)
                                                        .addComponent(clearDec2Bin)))
                                        .addGroup(decToBinPaneLayout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(decimalBinInvalidText)))
                                .addGap(16, 16, 16))
        );

        binaryPane.add(decToBinPane);

        resultPane.setBackground(new java.awt.Color(51, 51, 51));

        dec2BinHeader1.setFont(new java.awt.Font("Corbel Light", 0, 24)); // NOI18N
        dec2BinHeader1.setForeground(new java.awt.Color(255, 255, 255));
        dec2BinHeader1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        dec2BinHeader1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Club 6Asset 11.png"))); // NOI18N
        dec2BinHeader1.setText("Result");
        dec2BinHeader1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        binResultArea.setEditable(false);
        binResultArea.setBackground(new java.awt.Color(51, 51, 51));
        binResultArea.setColumns(20);
        binResultArea.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        binResultArea.setForeground(new java.awt.Color(255, 255, 255));
        binResultArea.setRows(5);
        binResultArea.setBorder(null);
        binResultArea.setSelectionColor(new java.awt.Color(0, 0, 0));
        jScrollPane1.setViewportView(binResultArea);

        javax.swing.GroupLayout resultPaneLayout = new javax.swing.GroupLayout(resultPane);
        resultPane.setLayout(resultPaneLayout);
        resultPaneLayout.setHorizontalGroup(
                resultPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(resultPaneLayout.createSequentialGroup()
                                .addContainerGap(123, Short.MAX_VALUE)
                                .addComponent(dec2BinHeader1)
                                .addGap(69, 69, 69))
                        .addGroup(resultPaneLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1)
                                .addContainerGap())
        );
        resultPaneLayout.setVerticalGroup(
                resultPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(resultPaneLayout.createSequentialGroup()
                                .addGap(0, 0, 0)
                                .addComponent(dec2BinHeader1)
                                .addGap(0, 0, 0)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE))
        );

        binaryPane.add(resultPane);

        calcMainPane.add(binaryPane, "binaryCard");

        hexPane.setBackground(new java.awt.Color(51, 51, 51));

        hexText.setForeground(new java.awt.Color(255, 255, 255));
        hexText.setText("Hex Panel");

        javax.swing.GroupLayout hexPaneLayout = new javax.swing.GroupLayout(hexPane);
        hexPane.setLayout(hexPaneLayout);
        hexPaneLayout.setHorizontalGroup(
                hexPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(hexPaneLayout.createSequentialGroup()
                                .addGap(236, 236, 236)
                                .addComponent(hexText)
                                .addContainerGap(301, Short.MAX_VALUE))
        );
        hexPaneLayout.setVerticalGroup(
                hexPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(hexPaneLayout.createSequentialGroup()
                                .addGap(255, 255, 255)
                                .addComponent(hexText)
                                .addContainerGap(306, Short.MAX_VALUE))
        );

        calcMainPane.add(hexPane, "hexCard");

        bandwidthPane.setBackground(new java.awt.Color(51, 51, 51));

        bandwidthText.setForeground(new java.awt.Color(255, 255, 255));
        bandwidthText.setText("Bandwidth Panel");

        javax.swing.GroupLayout bandwidthPaneLayout = new javax.swing.GroupLayout(bandwidthPane);
        bandwidthPane.setLayout(bandwidthPaneLayout);
        bandwidthPaneLayout.setHorizontalGroup(
                bandwidthPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(bandwidthPaneLayout.createSequentialGroup()
                                .addGap(229, 229, 229)
                                .addComponent(bandwidthText)
                                .addContainerGap(277, Short.MAX_VALUE))
        );
        bandwidthPaneLayout.setVerticalGroup(
                bandwidthPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(bandwidthPaneLayout.createSequentialGroup()
                                .addGap(263, 263, 263)
                                .addComponent(bandwidthText)
                                .addContainerGap(298, Short.MAX_VALUE))
        );

        calcMainPane.add(bandwidthPane, "bandwidthCard");

        filePane.setBackground(new java.awt.Color(51, 51, 51));

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("File IO Panel");

        javax.swing.GroupLayout filePaneLayout = new javax.swing.GroupLayout(filePane);
        filePane.setLayout(filePaneLayout);
        filePaneLayout.setHorizontalGroup(
                filePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(filePaneLayout.createSequentialGroup()
                                .addGap(235, 235, 235)
                                .addComponent(jLabel1)
                                .addContainerGap(290, Short.MAX_VALUE))
        );
        filePaneLayout.setVerticalGroup(
                filePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(filePaneLayout.createSequentialGroup()
                                .addGap(253, 253, 253)
                                .addComponent(jLabel1)
                                .addContainerGap(308, Short.MAX_VALUE))
        );

        calcMainPane.add(filePane, "fileCard");

        javax.swing.GroupLayout rootPaneLayout = new javax.swing.GroupLayout(rootPane);
        rootPane.setLayout(rootPaneLayout);
        rootPaneLayout.setHorizontalGroup(
                rootPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(rootPaneLayout.createSequentialGroup()
                                .addComponent(selectionPane, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addGroup(rootPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(calcMainPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(rootPaneLayout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(minimizeButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(closeButton))))
        );
        rootPaneLayout.setVerticalGroup(
                rootPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(rootPaneLayout.createSequentialGroup()
                                .addGroup(rootPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(closeButton)
                                        .addComponent(minimizeButton))
                                .addGap(0, 0, 0)
                                .addComponent(calcMainPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(selectionPane, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(rootPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(rootPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>

    private void rootPaneMousePressed(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        xx = evt.getX();
        yy = evt.getY();
    }

    private void rootPaneMouseDragged(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x-xx, y-yy);
    }

    private void minimizeButtonMousePressed(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        setState(JFrame.ICONIFIED);
    }

    private void closeButtonMousePressed(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        System.exit(0);
    }

    private void fileIOTabMousePressed(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        cardLayout.show(calcMainPane, "fileCard");
        setTabColor(fileIOTab);
        resetTabColor(binaryTab);
        resetTabColor(hexTab);
        resetTabColor(bandwidthTab);
    }

    private void bandwidthTabMousePressed(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        cardLayout.show(calcMainPane, "bandwidthCard");
        setTabColor(bandwidthTab);
        resetTabColor(binaryTab);
        resetTabColor(hexTab);
        resetTabColor(fileIOTab);
    }

    private void hexTabMousePressed(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        cardLayout.show(calcMainPane, "hexCard");
        setTabColor(hexTab);
        resetTabColor(binaryTab);
        resetTabColor(bandwidthTab);
        resetTabColor(fileIOTab);
    }

    private void binaryTabMousePressed(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        cardLayout.show(calcMainPane, "binaryCard");
        setTabColor(binaryTab);
        resetTabColor(hexTab);
        resetTabColor(bandwidthTab);
        resetTabColor(fileIOTab);
    }

    private void binaryTabMouseEntered(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        Color previousColor = binaryTab.getBackground();
        if (!previousColor.equals(new Color(51,51,51)))
            setHoverColor(binaryTab);
    }

    private void binaryTabMouseExited(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        Color previousColor = binaryTab.getBackground();
        if (!previousColor.equals(new Color(51,51,51)))
            resetTabColor(binaryTab);
    }

    private void hexTabMouseEntered(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        Color previousColor = hexTab.getBackground();
        if (!previousColor.equals(new Color(51,51,51)))
            setHoverColor(hexTab);
    }

    private void hexTabMouseExited(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        Color previousColor = hexTab.getBackground();
        if (!previousColor.equals(new Color(51,51,51)))
            resetTabColor(hexTab);
    }

    private void bandwidthTabMouseEntered(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        Color previousColor = bandwidthTab.getBackground();
        if (!previousColor.equals(new Color(51,51,51)))
            setHoverColor(bandwidthTab);
    }

    private void bandwidthTabMouseExited(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        Color previousColor = bandwidthTab.getBackground();
        if (!previousColor.equals(new Color(51,51,51)))
            resetTabColor(bandwidthTab);
    }

    private void fileIOTabMouseEntered(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        Color previousColor = fileIOTab.getBackground();
        if (!previousColor.equals(new Color(51,51,51)))
            setHoverColor(fileIOTab);
    }

    private void fileIOTabMouseExited(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        Color previousColor = fileIOTab.getBackground();
        if (!previousColor.equals(new Color(51,51,51)))
            resetTabColor(fileIOTab);
    }

    private static final char[] allowedBinaryChars = {'0','1'};
    private static final char[] allowedOperators = {'+','-','*','/'};
    private void calculationEntryKeyTyped(java.awt.event.KeyEvent evt) {
        // TODO add your handling code here:
        // Not allowing any keys besides 0s and 1s, space, and operators
        char c = evt.getKeyChar();
        if (new String(allowedBinaryChars).indexOf(c) == -1 && new String(allowedOperators).indexOf(c) == -1 && c != ' ') {
            evt.consume();
        }
    }

    private boolean firstFocusCalc = true;
    private void calculationEntryFocusGained(java.awt.event.FocusEvent evt) {
        // TODO add your handling code here:
        if (firstFocusCalc) {
            calculationEntry.setText("");   //Careful: if user never focus on textField, getText() will return the default String: "1010 + 1010"
            firstFocusCalc = false;
        }
    }

    private boolean firstFocusBin = true;
    private void binValueEntryFocusGained(java.awt.event.FocusEvent evt) {
        // TODO add your handling code here:
        if (firstFocusBin) {
            binValueEntry.setText("");
            firstFocusBin = false;
        }
    }

    private void binValueEntryKeyTyped(java.awt.event.KeyEvent evt) {
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (new String(allowedBinaryChars).indexOf(c) == -1) {
            evt.consume();
        }
    }

    private boolean firstFocusDecB = true;
    private void decValueEntryFocusGained(java.awt.event.FocusEvent evt) {
        // TODO add your handling code here:
        if (firstFocusDecB) {
            decValueEntry.setText("");
            firstFocusDecB = false;
        }
    }

    private static final char[] allowedDecimalChars = {'2','3','4','5','6','7','8','9'};
    private void decValueEntryKeyTyped(java.awt.event.KeyEvent evt) {
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (new String(allowedBinaryChars).indexOf(c) == -1 && new String(allowedDecimalChars).indexOf(c) == -1 && c != '-') {
            evt.consume();
        }
    }

    private void clearButtonMouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        calculationEntry.setText("");
    }

    // Binary Calculation should be done here
    private void equalButtonMouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        String input = calculationEntry.getText();
        String regex = "[0-1]+[\\s]*[-+*/][\\s]*[0-1]+";
        if (input.matches(regex)) {
            calcInvalidText.setVisible(false);
            String[] calculation = splitCalculation(input);     // 0 - first variable, 1 - operator, 2 - second variable
            Binary num1 = new Binary(calculation[0]);
            if (calculation[2] == null) {
                calcInvalidText.setVisible(true);
            } else {
                String[] result = performCalculation(num1, calculation[1], calculation[2]);
                binResultArea.append(String.format("%s %s %s =\n%s\n%s\n-----------------------------\n", calculation[0],calculation[1],calculation[2], result[0], result[1]));
            }
        } else {
            calcInvalidText.setVisible(true);
        }
    }

    private void clearBin2DecMouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        binValueEntry.setText("");
    }

    private void equalBin2DecMouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add Binary to Decimal conversion:
        if (!binValueEntry.getText().equals("")) {
            String convertedDec = new BinaryCalculator(new Binary(binValueEntry.getText())).toDecimal().getValue();
            binResultArea.append(String.format("Binary: %s\nDecimal: %s\n-----------------------------\n", binValueEntry.getText(), convertedDec));
        }
    }

    private void clearDec2BinMouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        decValueEntry.setText("");
    }

    private void equalDec2BinMouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        String regex = "[-]?[0-9]+";
        if (decValueEntry.getText().matches(regex)) {
            decimalBinInvalidText.setVisible(false);
            String convertedBin = new DecimalCalculator(new Decimal(decValueEntry.getText())).toBinary().getValue();
            binResultArea.append(String.format("Decimal: %s\nBinary: %s\n-----------------------------\n", decValueEntry.getText(), convertedBin));
        } else {
            //show invalid text label
            decimalBinInvalidText.setVisible(true);
        }
    }

    //Setting tab color when selected
    private void setTabColor(JPanel panel) {
        panel.setBackground(new Color(51,51,51));
    }

    //Setting hover color
    private void setHoverColor(JPanel panel) {
        panel.setBackground(new Color(30,30,30));
    }

    //Resetting tab color to normal when not selected
    private void resetTabColor(JPanel panel) {
        panel.setBackground(new Color(15,15,15));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Metal look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Metal".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
            javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getCrossPlatformLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CalculatorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CalculatorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CalculatorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CalculatorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CalculatorGUI().setVisible(true);
            }
        });
    }

    private int xx, yy; // for moving window
    // Variables declaration - do not modify
    private javax.swing.JLabel bandwidthLabel;
    private javax.swing.JLabel bandwidthLabel1;
    private javax.swing.JPanel bandwidthPane;
    private javax.swing.JPanel bandwidthTab;
    private javax.swing.JLabel bandwidthText;
    private javax.swing.JLabel bin2DecHeader;
    private javax.swing.JPanel binCalcPane;
    private javax.swing.JPanel binToDecPane;
    private javax.swing.JTextField binValueEntry;
    private javax.swing.JLabel binValueText;
    private javax.swing.JLabel binaryCalculationHeader;
    private javax.swing.JLabel binaryLabel;
    private javax.swing.JPanel binaryPane;
    private javax.swing.JPanel binaryTab;
    private javax.swing.JLabel calcEntryText;
    private javax.swing.JLabel calcInvalidText;
    private javax.swing.JPanel calcMainPane;
    private javax.swing.JTextField calculationEntry;
    private javax.swing.JLabel clearBin2Dec;
    private javax.swing.JLabel clearButton;
    private javax.swing.JLabel clearDec2Bin;
    private javax.swing.JLabel closeButton;
    private javax.swing.JLabel dec2BinHeader;
    private javax.swing.JLabel dec2BinHeader1;
    private javax.swing.JPanel decToBinPane;
    private javax.swing.JTextField decValueEntry;
    private javax.swing.JLabel decValueText;
    private javax.swing.JLabel decimalBinInvalidText;
    private javax.swing.JLabel designedBy;
    private javax.swing.JLabel equalBin2Dec;
    private javax.swing.JLabel equalButton;
    private javax.swing.JLabel equalDec2Bin;
    private javax.swing.JPanel fileIOTab;
    private javax.swing.JPanel filePane;
    private javax.swing.JLabel hexLabel;
    private javax.swing.JPanel hexPane;
    private javax.swing.JPanel hexTab;
    private javax.swing.JLabel hexText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea binResultArea;
    private javax.swing.JLabel logo;
    private javax.swing.JLabel minimizeButton;
    private javax.swing.JPanel resultPane;
    private javax.swing.JPanel rootPane;
    private javax.swing.JPanel selectionPane;
    private javax.swing.JLabel topLogo;
    private javax.swing.JLabel underLine;
    private javax.swing.JPanel welcomePane;
    private javax.swing.JLabel welcomeText;
    // End of variables declaration
}
